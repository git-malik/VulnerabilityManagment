#/usr/bin/python3.8
import psycopg2
import json


jsonConfigFile = json.load(open("./setup/config.json"))

# ============DATI PER IL DATABASE=============
db_host = jsonConfigFile["db_host"]
db_port = jsonConfigFile["db_port"]
db_user = jsonConfigFile["db_user"]
db_password = jsonConfigFile["db_password"]
db_name = jsonConfigFile["db_name"]

conn = psycopg2.connect(host=db_host, port=db_port, user=db_user,
                        password=db_password, database=db_name)  # connection to database
cursor = conn.cursor()

cursor.execute("select DISTINCT * from customers_cpe")
CustomersCpelist = cursor.fetchall()


cursor.execute("select DISTINCT * from cves")
cvelist = cursor.fetchall()

if not cvelist:
    print("no cve list")

if not CustomersCpelist:
    print("no cpe list")

for singleCustomerCpeTuple in CustomersCpelist:
    cursor.execute("select * from cpearchive where id = " + str(singleCustomerCpeTuple[len(singleCustomerCpeTuple) -1]))
    cpelist = cursor.fetchall()
    if not cpelist:
        print("no such cpe id :"+ str(singleCustomerCpeTuple[len(singleCustomerCpeTuple) -1]))
    # print(cpelist)
    for singlecpeTuple in cpelist:
        singlecpe = list(singlecpeTuple)[1:]
        # print(singlecpe)
        #formatto la cpe secondo lo standard wfn 2.3
        part = ""
        if singlecpe[0] == "hardware":
            singlecpe[0] = "h"
        elif singlecpe[0] == "application":
            singlecpe[0] = "a"
        else:
            singlecpe[0] = "o" 
        # wfn = CPE2_3_WFN("wfn:[part={}, vendor={}, product={}, version={}, update={}, edition={}, language={}, sw_edition={}, target_sw={}, target_hw={}, other={}]".format(*singlecpe))
        # print(wfn.as_fs())
        wfn = "cpe:2.3:"+singlecpe[0]+":"+singlecpe[1]+":"+singlecpe[2]+":"+singlecpe[3] #part of a cpe
        for cve in cvelist: #se nelle cve 
            # print(wfn)
            # print(type(cve[len(cve) - 1]))
            # print(wfn in str(cve[len(cve) - 1]))
            if wfn in str(cve[len(cve) - 1]) and cve[2] >= 7:
                print("vulns for client id " + str(singleCustomerCpeTuple[1]) + " : " + str(cve[0]))
                cursor.execute("insert into clientscve (client_id, cve_id ,cpe_id) values(%s,%s,%s)",(singleCustomerCpeTuple[1], cve[0], singlecpeTuple[0]))
                conn.commit()
                # print(True)