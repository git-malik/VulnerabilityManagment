from os import replace
from cpe import CPE
import xml.etree.ElementTree as ET
import psycopg2
import sys
import json

jsonConfigFile = json.load(open("./setup/config.json"))

# ==============LOGIN DB===================
db_host = jsonConfigFile["db_host"]
db_port = jsonConfigFile["db_port"]
db_user = jsonConfigFile["db_user"]
db_password = jsonConfigFile["db_password"]
db_name = jsonConfigFile["db_name"]
# ==============LOGIN DB===================

conn = psycopg2.connect(host=db_host, port=db_port, user=db_user,
                        password=db_password, database=db_name)
cursor = conn.cursor()


def isPresentInDB(cpeListItem):

    cursor.execute("SELECT * from cpearchive where product_tipology like \'{}\' and vendor like \'{}\' and product_name like \'{}\' and product_version like \'{}\' and product_version_update like \'{}\' and product_edition like \'{}\' and product_language like \'{}\' and sw_edition like \'{}\' and target_sw like \'{}\' and target_hw like \'{}\' and other like \'{}\'".format(*cpeListItem))
    cpeList = cursor.fetchall()
    if cpeList:
        return True
    return False


tree = ET.parse(sys.argv[1])

root = tree.getroot()
for elem in root.findall("ns0:cpe-item/cpe-23:cpe23-item", namespaces={"cpe-23": "http://scap.nist.gov/schema/cpe-extension/2.3", "ns0": "http://cpe.mitre.org/dictionary/2.0"}):

    cpeFs = elem.get("name")  # cpe in FS format
    cpe = CPE(cpeFs)
    # print(cpe)

    part = ""
    if cpe.get_part()[0] == "h":
        part = "hardware"
    elif cpe.get_part()[0] == "a":
        part = "application"
    else:
        part = "os"

    cpeFull = [part, cpe.get_vendor()[0].replace("\\", "").replace("\'","\""), cpe.get_product()[0].replace("\\", "").replace("\'","\""), cpe.get_version()[0].replace("\\", "").replace("\'","\""), cpe.get_update()[0].replace("\\", "").replace("\'","\""), cpe.get_edition()[0].replace("\\", "").replace("\'","\""), cpe.get_language()[0].replace("\\", "").replace("\'","\""), cpe.get_software_edition()[0].replace("\\", "").replace("\'","\""), cpe.get_target_software()[0].replace("\\", "").replace("\'","\""), cpe.get_target_hardware()[0].replace("\\", "").replace("\'","\""), cpe.get_other()[0].replace("\\", "").replace("\'","\"")]

    if not isPresentInDB(cpeFull):
        cursor.execute("INSERT INTO cpearchive (product_tipology, vendor, product_name, product_version ,product_version_update ,product_edition,product_language, sw_edition,target_sw,target_hw, other) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)",(cpeFull))
        print("inserted vuln")
    else:
        print("not inserted")
    conn.commit()

cursor.close()
conn.close()
